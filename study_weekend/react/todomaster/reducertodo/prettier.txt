
설치 명령문
npm i prettier eslint eslint-plugin-prettier eslint-plugin-react eslint-plugin-unused-imports

-> 이렇게 하면 배포 시에도 다 보임( 그럴 필요 없음, 개발자끼리만 확인되면 됨 )
-> npm rm prettier eslint eslint-plugin-prettier eslint-plugin-react eslint-plugin-unused-imports

으로 지워주고 -D 붙여 다시 깔아줌

npm i -D prettier eslint eslint-plugin-prettier eslint-plugin-react eslint-plugin-unused-imports

-D ( 개발자만 필요, 배포시 보여지지 않음 )

================================

prettier 생김새
eslint 문법 검사( 컨벤션 설정하여 맞지 않으면 에러 )

code formatter와 lint는 개발자 협업 간의 코드의 형태, 포멧팅, 구조, 문법 등을 일치 시킴으로서 가독성 및 구독성을 상승시키고 포멧팅 여부에 따라 줄바꿈이나 띄어쓰기 조차 변화로 인지하는 깃허브에서
코드적이 변화가 아닌 부분을 제외하기 위해서 사용
(이거 안하면 3만 7천줄 리뷰해야 됨)

================================

eslint-plugin-prettier

lint인 eslint에도 prettier와 같은 code formatting 기능이 있으나
prettier의 code formatting 기능이 더욱 강력하므로 충돌되는 formatting 요소를 비활성화

================================

eslint-plugin-react

react 기본 추천 옵션 확장 프로그램

================================

eslint-plugin-unused-imports

사용하지 않는 import(참조)된 컴포넌트 및 모듈들을 제거하는 확장 프로그램

----------

6주 -> 12일

1, 2일 : redux, axiostodo
                ---------
                  에러핸들링, DI, 전역상태관리, 로그인로직(토큰관리)

3, 4일 : axiostodo, DBMS(1일)

5, 6일 : node 기본, express

7, 8일 : 회원가입, 로그인 (jwt), 할 일 목록 api

9, 10일 : socket(채팅), typescript

11, 12일 : typescript

================================

husky

git hook을 더 편하게 사용할 수 있는 npm 패키지

githook이란?
git과 관련된 어떤 이벤트가 발생했을 때 특정 스크립트를 실행할 수 있도록 하는 기능이

=> git event 이후 실행될 특별한 이벤트를 실행시키기 위한 패키지

event?
  commit
  rebase
  merge
  push

(pre, post)

pre -> 이벤트 발생 이전
post -> 이벤트 발생 이후

================================

husky 설정 방법

  1. npm i -D husky
  2. script에 husky install 작성
  3. npx husky install -----> .husky folder 생성
  4. npx husky add 경로(.husky/pre-push) 'npm run lint:fix'
  5. npx husky add .husky/pre-commit 'npm run formatter'

허스키 설치 -> 허스키 폴더 생성 -> 명령어 등록
